name: CI run

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  haskell:
    runs-on: ubuntu-20.04
    timeout-minutes: 30

    steps:
    - uses: actions/checkout@v4

    - name: update packages
      run: sudo apt update

    # set up haskell
    - name: install haskell
      run: sudo apt install haskell-platform cabal-install

    - name: install deps
      run: |
          cabal update
          cabal install --lib process hspec split

    - name: Testbench Haskell 2022
      run: |
          days=("day1" "day2" "day3" "day4" "day5" "day6" "day7" "day8" "day9")
          cd haskell
          ghc haskell.hs
          for day in ${days[@]}; do
            ghc ./2022/$day/lib.hs
            time ./2022/$day/lib
          done

  rust:
    runs-on: ubuntu-20.04
    timeout-minutes: 30

    steps:
    - uses: actions/checkout@v4

    - name: update packages
      run: sudo apt update

    - name: Testbench Rust 2022
      run: |
          days=("day1" "day2" "day3" "day4" "day6" "day8")
          cd rust
          for day in ${days[@]}; do
            rustc ./2022/$day/lib.rs
            time ./lib
          done

  tinygrad:
    runs-on: ubuntu-20.04
    timeout-minutes: 30

    steps:
    - uses: actions/checkout@v4

    - name: update packages
      run: sudo apt update

    # set up tinygrad
    - name: install tinygrad
      run: pip install tinygrad

    - name: Testbench Tinygrad 2022
      run: |
          days=("day1" "day2")
          cd tinygrad
          for day in ${days[@]}; do
            time python3 ./2022/$day/tiny.py;
          done

  verilog:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
  
    steps:
    - uses: actions/checkout@v4
  
    - name: update packages
      run: sudo apt update
  
    - name: Testbench Verilog 2022
      run: |
          days=("day1" "day2" "day3" "day4" "day5" "day6" "day7" "day8" "day9")
          cd rust
          rustc rust.rs
          for day in ${days[@]}; do
            ./rust 2022 $day
            time ./2022/$day/rust
          done

